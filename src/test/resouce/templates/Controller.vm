/*
* The MIT License (MIT)
*
* Copyright (c) 2014-2016 abel533@gmail.com
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
*/
package $PackageName;

import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import ${AllPackgeName}.service.I${TableClassName}Service;
import ${AllPackgeName}.model.${TableClassName};
import javax.annotation.Resource;
import java.util.List;

/**
 * @author $CreateMan
 * @since $Date
 */
@RestController
@RequestMapping("/${TableDownClassName}")
public class ${TableClassName}Controller {

    @Resource
    private I${TableClassName}Service ${TableDownClassName}Service;

    @RequestMapping
    public PageInfo<${TableClassName}> getAll(${TableClassName} ${TableDownClassName}) {
        List<${TableClassName}> countryList = ${TableDownClassName}Service.getAll(${TableDownClassName});
        return new PageInfo<${TableClassName}>(countryList);
    }

    @RequestMapping(value = "/add")
    public ${TableClassName} add() {
        return new ${TableClassName}();
    }

    @RequestMapping(value = "/view/{id}")
    public ${TableClassName} view(@PathVariable Integer id) {
        ModelAndView result = new ModelAndView();
        ${TableClassName} ${TableDownClassName} = ${TableDownClassName}Service.getById(id);
        return ${TableDownClassName};
    }

    @RequestMapping(value = "/delete/{id}")
    public ModelMap delete(@PathVariable Integer id) {
        ModelMap result = new ModelMap();
        ${TableDownClassName}Service.deleteById(id);
        result.put("msg", "删除成功!");
        return result;
    }

    @RequestMapping(value = "/save", method = RequestMethod.POST)
    public ModelMap save(${TableClassName} ${TableDownClassName}) {
        ModelMap result = new ModelMap();
        String msg = ${TableDownClassName}.getId() == null ? "新增成功!" : "更新成功!";
        ${TableDownClassName}Service.save(${TableDownClassName});
        result.put("${TableDownClassName}", ${TableDownClassName});
        result.put("msg", msg);
        return result;
    }
}
